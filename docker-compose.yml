version: '3.8'

networks:
  appnet:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: "172.25.1.0/16"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      appnet:
        ipv4_address: 172.25.1.1

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
    # To learn about configuring Kafka for access across networks see
    # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://172.25.1.2:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      #KAFKA_CFG_LISTENERS: PLAINTEXT://172.25.1.2:9092
    networks:
      appnet:
        ipv4_address: 172.25.1.2

  app_consumer:
    image: app_consumer
    build:
      context: .
      dockerfile: ./app_consumer/Dockerfile
    environment:
      NODE_ENV: production
    ports:
      - 3000:3000
    depends_on:
      - zookeeper
      - broker
    networks:
      appnet:
        ipv4_address: 172.25.1.3

  app_producer:
    image: app_producer
    build:
      context: .
      dockerfile: ./app_producer/Dockerfile
    environment:
      NODE_ENV: production
    ports:
      - 3001:3000
    depends_on:
      - zookeeper
      - broker
    networks:
      appnet:
        ipv4_address: 172.25.1.4
